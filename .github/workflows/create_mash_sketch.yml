name: Step2 Create Sketches

on: 
  workflow_dispatch:
    inputs:
      run:
        description: run id for reference creation
        required: true
      chunk:
        description: "chunk of ids.txt to work on [00-08]"
        required: true

run-name: Create sketch for chunk ${{ github.event.inputs.chunk }} from ${{ github.event.inputs.run }}

jobs:          
  download_and_sketch:
    runs-on: ubuntu-latest
    steps:
      - name: Download the id chunk file
        uses: actions/download-artifact@v4
        with:
          name: genome-split-files
          run-id: ${{ github.event.inputs.run }}
      
      - name: Download Tools
        run: |
          wget -q https://ftp.ncbi.nlm.nih.gov/pub/datasets/command-line/v2/linux-amd64/datasets
          chmod +x datasets
          wget -q https://github.com/marbl/Mash/releases/download/v2.3/mash-Linux64-v2.3.tar
          tar -xvf mash-Linux64-v2.3.tar
          rm mash-Linux64-v2.3.tar
          mv mash-Linux64-v2.3 mash

      - name: Download, Sketch, and Paste Genomes
        run: |
          export PATH=$(pwd):$(pwd)/mash:$PATH
          mkdir -p tmp
          cd tmp
          
          # This robust loop correctly reads tab-separated accessions and full organism names
          while IFS=$'\t' read -r accession organism_name; do
            # Skip empty lines
            if [ -z "$accession" ]; then continue; fi

            echo "--- Downloading $accession ($organism_name) ---"
            
            # Download the genome
            if ! datasets download genome accession "$accession" --no-progressbar --filename ../ncbi_dataset.zip; then
              echo "ERROR: Failed to download $accession. Skipping."
              continue
            fi

            # Unzip and find the fasta file
            unzip -q -o ../ncbi_dataset.zip
            fasta_file=$(find ncbi_dataset/data -name "*_genomic.fna")

            if [ -z "$fasta_file" ] || [ ! -f "$fasta_file" ]; then
                echo "ERROR: Could not find .fna file for $accession. Skipping."
                rm -rf ncbi_dataset ncbi_dataset.zip README.md
                continue
            fi
            
            # Sketch the single genome
            mash sketch -k 21 -s 1000 -o single.msh "$fasta_file"

            # If this is the first sketch, it becomes the main one. Otherwise, paste into it.
            if [ ! -f "final_chunk.msh" ]; then
              mv single.msh final_chunk.msh
            else
              mash paste -l final_chunk single.msh > combined.msh
              mv combined.msh final_chunk.msh
            fi
            
            echo "Cleaning up files for $accession..."
            rm -rf ncbi_dataset ncbi_dataset.zip README.md single.msh
            
          done < ../x${{ github.event.inputs.chunk }}.txt

          # Rename the final sketch for this chunk
          mv final_chunk.msh ${{ github.event.inputs.chunk }}.msh

      - name: Upload chunk sketch
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.chunk }}_sketch
          path: tmp/${{ github.event.inputs.chunk }}.msh
          overwrite: true
