name: Step2 Create Sketches

on: 
  workflow_dispatch:
    inputs:
      run:
        description: run id for reference creation
        required: true
      chunk:
        description: "chunk of ids.txt to work on [00-08]"
        required: true

run-name: Create sketch for chunk ${{ github.event.inputs.chunk }} from ${{ github.event.inputs.run }}

jobs:          
  download_and_sketch:
    runs-on: ubuntu-latest
    steps:
      - name: Download the ids
        uses: actions/download-artifact@v4
        with:
          name: genome-split-files
          github-token: ${{ github.token }}
          repository: ${{ github.repository }}
          run-id: ${{ github.event.inputs.run }}
      
      - name: Download Tools
        run: |
          wget -q https://ftp.ncbi.nlm.nih.gov/pub/datasets/command-line/v2/linux-amd64/datasets
          chmod +x datasets
          wget -q https://github.com/marbl/Mash/releases/download/v2.3/mash-Linux64-v2.3.tar
          tar -xvf mash-Linux64-v2.3.tar
          rm -rf mash-Linux64-v2.3.tar
          mv mash-Linux64-v2.3 mash

      - name: Download, Sketch, and Paste
        run: |
          export PATH=$(pwd):$(pwd)/mash:$PATH
          mkdir tmp
          cd tmp
          
          # === CORRECTED LOOP STRUCTURE ===
          # This robust loop prevents commands inside from consuming the input file.
          while IFS= read -r line <&3; do
            id=$(echo "$line" | awk '{print $1}')
            
            echo "--- Downloading $id ---"
            # Retry download up to 3 times
            success=false
            for i in 1 2 3; do
              if datasets download genome accession "$id" --no-progressbar --filename ../ncbi_dataset.zip; then
                success=true
                break
              fi
              echo "Download failed. Retrying in 15 seconds..."
              sleep 15
            done

            if ! $success; then
              echo "ERROR: Failed to download $id after 3 attempts. Skipping."
              continue
            fi

            echo "Unzipping and copying..."
            unzip -o ../ncbi_dataset.zip
            
            # Find and copy the fasta file
            fasta_file=$(find ncbi_dataset/data -name "*_genomic.fna")
            if [ -z "$fasta_file" ]; then
                echo "ERROR: Could not find .fna file for $id. Skipping."
                rm -rf ncbi_dataset ncbi_dataset.zip README.md
                continue
            fi
            cp "$fasta_file" "genome.fasta"

            if [ ! -f "final.msh" ]; then
              echo "Creating initial mash sketch..."
              mash sketch "genome.fasta" -o final -k 21 -s 1000
            else
              echo "Sketching and pasting..."
              mash sketch "genome.fasta" -o sample -k 21 -s 1000
              mv final.msh tmp.msh
              mash paste final tmp.msh sample.msh
              rm tmp.msh sample.msh
            fi
            
            echo "Cleaning up files for $id..."
            rm -rf genome.fasta ncbi_dataset ncbi_dataset.zip README.md
            
          done 3< ../x${{ github.event.inputs.chunk }}.txt

          mv final.msh ${{ github.event.inputs.chunk }}.msh

      - name: Upload sketch
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.chunk }}_sketch
          path: tmp/${{ github.event.inputs.chunk }}.msh
          overwrite: true
